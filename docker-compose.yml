
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ecommerce-laravel-react
    container_name: ecommerce_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./vendor:/var/www/html/vendor
      - ./node_modules:/var/www/html/node_modules
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - ecommerce
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=ecommerce
      - DB_USERNAME=ecommerce_user
      - DB_PASSWORD=Admin_123?
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    # ports:
    #   - "8000:80"

  db:
    image: mysql:8.0
    container_name: ecommerce_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: Admin_123?
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - ecommerce
    ports:
      - "3306:3306"

  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    restart: unless-stopped
    networks:
      - ecommerce
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    container_name: ecommerce_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./vendor:/var/www/html/vendor
      - ./node_modules:/var/www/html/node_modules
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - ecommerce

volumes:
  dbdata:
    driver: local

networks:
  ecommerce:
    driver: bridge
